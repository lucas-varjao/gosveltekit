# PROJECT OVERVIEW

- GoSvelteKit is a template/base project with a Golang backend and SvelteKit (Svelte 5) frontend, designed to kickstart new projects with authentication and basic functionality already implemented.

## TECH STACK

### Backend Specifications

- We use Golang with Gin for our web framework
- Authentication is handled via JWT tokens
- SQLite is our database of choice for simplicity and portability
- We utilize GORM as our ORM for database operations
- API documentation is generated using Swaggo
- Structured logging is implemented with Zap
- Configuration management is handled by Viper

### Frontend Specifications

- SvelteKit (Svelte 5) is our frontend framework
- We use TailwindCSS for styling with a utility-first approach
- Bun is our JavaScript runtime and package manager
- UI components are built with shadcn-svelte
- Always use Svelte 5 with the new features for the frontend.
- This project only uses dark mode.
- Use modern CSS layout techniques like flexbox and grid

## IMPORTANT

- Always use Svelte 5 with the new features for the frontend.
- This project only uses dark mode.

## OTHER CONTEXT

### Design Preferences

- Aim for a professional and minimalist design.
- Incorporate basic animations for enhanced user experience.
- Use `slate-950` as the primary background color.

### Code Style & Conventions

- Backend Go code follows standard Go idioms and the project structure adheres to Go project layout best practices
- Frontend TypeScript uses 4-space indentation and single quotes
- Use correct TypeScript code
- CSS is primarily written as Tailwind utility classes
- Component files use .svelte extension and follow SvelteKit conventions

### Deployment

- The project is designed to be easily deployable as Docker containers
- Environment variables are used for configuration across different environments

## COMMENTS
